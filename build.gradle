

ext {

	versions = [
			profile : System.getProperty("env") ?: "dev",
			nettyVersion          : "4.1.33.Final",
			minaVersion 		  : "2.0.7",
			springBootVersion 	  : '3.0.4',
			mysqlVersion 		  : "8.0.28",
			protostuffVersion     : "1.5.9",
			protobufVersion 	  : "1.11.7",
			jforgameVersion  	  : "1.2.0",
	]

	dependencyPool = [
			nettyVersion          : "4.1.33.Final",
//			springboot : "org.springframework.boot:spring-boot-dependencies:${versions.springBootVersion}",
			commonslang3:  "org.apache.commons:commons-lang3:3.4",
			lombok: 'org.projectlombok:lombok:1.18.30',
//			annotationProcessor 'org.projectlombok:lombok:1.18.30'
			netty:  "io.netty:netty-all:${versions.nettyVersion}",
			minacore: "org.apache.mina:mina-core:${versions.minaVersion}",
			jprotobuf: "com.baidu:jprotobuf:${versions.protobufVersion}",
			protostuffcore: "io.protostuff:protostuff-core:${versions.protostuffVersion}",
			protostuffruntime: "io.protostuff:protostuff-runtime:${versions.protostuffVersion}",
			mysql: "mysql:mysql-connector-java:${versions.mysqlVersion}",
			groovy: 'org.codehaus.groovy:groovy-all:2.4.11',
			guava: 'com.google.guava:guava:30.1-jre',
			junit: 'junit:junit:4.12'
	]
}

allprojects {
	group = "org.forfun.mmorpg"
	version = 1.0
	apply plugin: "eclipse"
	apply plugin: "idea"
	apply plugin: "java"

	task clearTemp(type: Delete) {
		delete "${projectDir}/build"
		delete "${projectDir}/out"
	}

}

subprojects {
	ext.configDir = new File(rootDir, "check")
	//apply from: "$rootDir/check/checkstyle/checkstyle.gradle"
	//apply from: "$rootDir/check/pmd/pmd.gradle"
	apply plugin: "java-library"
	dependencies {
//		compileOnly dependencies.lombok
//		annotationProcessor  ext.dependencies.lombok
		testImplementation dependencyPool.junit
	}
}

buildscript {
	repositories {
		maven { url 'https://maven.aliyun.com/repository/public' }
		maven { url 'https://repo.spring.io/libs-milestone' }
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:3.0.4")
	}
}



configure(allprojects) { project ->

	apply plugin: "java"
	apply plugin: "java-library"

	def commonCompilerArgs =
			["-Xlint:serial", "-Xlint:cast", "-Xlint:classfile", "-Xlint:dep-ann",
			 "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally", "-Xlint:overrides",
			 "-Xlint:path", "-Xlint:processing", "-Xlint:static", "-Xlint:try", "-Xlint:-options"]

	//"-Xlint:deprecation", "-Werror"
	compileJava.options*.compilerArgs = commonCompilerArgs +
			["-Xlint:varargs", "-Xlint:fallthrough", "-Xlint:rawtypes",
			  "-Xlint:unchecked"]

	compileTestJava.options*.compilerArgs = commonCompilerArgs +
			["-Xlint:-varargs", "-Xlint:-fallthrough", "-Xlint:-rawtypes",
			 "-Xlint:-deprecation", "-Xlint:-unchecked"]

	compileJava {
		sourceCompatibility = JavaVersion.VERSION_17
		targetCompatibility = JavaVersion.VERSION_17
		options.encoding = "UTF-8"
	}

	compileTestJava {
		sourceCompatibility = JavaVersion.VERSION_17
		targetCompatibility = JavaVersion.VERSION_17
		options.encoding = "UTF-8"
		options.compilerArgs += "-parameters"
	}

	repositories {
	    mavenLocal()
	    mavenCentral()
	}

	eclipse {
	    classpath {
	        downloadJavadoc = false
	        downloadSources = true
	    }
	}

	// apply plugin: 'findbugs'

	// findbugs {
	// 	toolVersion == '2.0.1'
	// 	ignoreFailures = true
	// 	effort = 'max'
	// }

	// tasks.withType(FindBugs) {
	// 	reports {
	// 		xml.enabled = false
	// 		html.enabled = true
	// 	}
	// }

}






